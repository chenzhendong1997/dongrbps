<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dingzhen.dao.AttenceDao">
	
	<select id="findAttence" parameterType="attence" resultType="attence">
		select score,time,u.userName,a.userId,
        (select d.attence_name FROM rbps.dict d where d.attence_state = a.one_check) one_check,
		(select d.attence_name FROM rbps.dict d where d.attence_state = a.two_check) two_check,
		(select d.attence_name FROM rbps.dict d where d.attence_state = a.three_check) three_check,
		(select d.attence_name FROM rbps.dict d where d.attence_state = a.four_check) four_check,
		(select d.attence_name FROM rbps.dict d where d.attence_state = a.five_check) five_check,
		(select d.attence_name FROM rbps.dict d where d.attence_state = a.six_check) six_check
        from rbps.attence a left join rbps.user u on a.userId=u.userId where 1=1
        <if test="userId!=null and userId!=-1">  
            <![CDATA[  
              AND a.userId = #{userId}
            ]]>
        </if>
         <if test="userName != null and '' != userName">  
            <![CDATA[  
              AND u.userName like CONCAT('%', #{userName}, '%')  
            ]]>  
        </if>
        <if test="time!=null and time!=''">
            <![CDATA[  
              AND a.time = #{time}
            ]]>  
        </if>
        order by time
		<if test="page != null and rows != null" >
              limit #{page}, #{rows} 
        </if>
	</select>
	<select id="countAttence" parameterType="attence" resultType="int">
		select count(*) from attence a where 1 = 1
		<if test="userId!=null and userId!=-1">  
            <![CDATA[  
              AND a.userId = #{userId}
            ]]>  
        </if>
        <if test="time!=null and time!=''">  
            <![CDATA[  
              AND a.time = #{time}
            ]]>  
        </if>
	</select>
	
	<select id="findAlluser" parameterType="attence" resultType="attence">
		select a.userName from rbps.attence b left join rbps.user a on b.userId=a.userId
	</select>
	
	<insert id="addAttence" parameterType="attence" >
		insert attence(userId,one_check,two_check,three_check,four_check,five_check,six_check,score,time) 
		values (#{userId},#{one_check},#{two_check},#{three_check},#{four_check},#{five_check},#{six_check},'6',#{time})
	</insert>
	
	<update id="updateAttence" parameterType="attence">
    	update attence set
    	<trim suffixOverrides=",">
			<if test="one_check!=null">one_check=#{one_check},</if>
			<if test="two_check!=null">two_check=#{two_check},</if>
			<if test="three_check!=null">three_check=#{three_check},</if>
			<if test="four_check!=null">four_check=#{four_check},</if>
			<if test="five_check!=null">five_check=#{five_check},</if>
			<if test="six_check!=null">six_check=#{six_check},</if>
		</trim>
		<where>userId=#{userId}</where>
    </update>
	
	
	<delete id="deleteUser" parameterType="Integer">
		delete from user 
		<where>userId=#{userId}</where>
	</delete>
	
	<select id="loginUser" parameterType="Map" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		where userName=#{userName} and password=#{password}
	</select>
	
	
	<select id="existUserWithUserName" parameterType="String" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		where userName=#{userName}
	</select>
	
	
	<select id="existUserWithRoleId" parameterType="Integer" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		where roleId=#{roleId}
	</select>
	
	
	
</mapper>
