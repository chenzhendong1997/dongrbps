<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dingzhen.dao.ClassDao">
	
	<select id="findClass" parameterType="class" resultType="class">
		select id,class_name,u.userName
		from class c left join user u on c.teacher_code=u.userId where 1 = 1
		<if test="class_name != null and '' != class_name">  
            <![CDATA[  
              AND class_name like CONCAT('%', #{class_name}, '%')  
            ]]>  
        </if>
		<if test="page != null and rows != null" >           
              limit #{page}, #{rows} 
        </if>
	</select>


	<select id="countClass" parameterType="class" resultType="int">
		select count(*) from class where 1 = 1
	</select>
	
	<select id="findOneUser" parameterType="Integer" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		<where>userId=#{userId}</where>
	</select>
	
	<insert id="addClass" parameterType="class" >
		insert class(class_name,teacher_code) 
		values (#{class_name},#{teacher_code})
	</insert>
	
	<update id="updateClass" parameterType="class">
    	update class set
    	<trim suffixOverrides=",">
			<if test="class_name">class_name=#{class_name},</if>
			<if test="teacher_code">teacher_code=#{teacher_code},</if>
		</trim>
		<where>id=#{id}</where>
    </update>
	
	
	<delete id="deleteClass" parameterType="Integer">
		delete from class 
		<where>id=#{id}</where>
	</delete>
	
	<select id="loginUser" parameterType="Map" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		where userName=#{userName} and password=#{password}
	</select>
	
	
	<select id="existClassWithClassName" parameterType="String" resultType="class">
		select class_name,teacher_code from class
		where class_name=#{class_name}
	</select>
	
	
	<select id="existUserWithRoleId" parameterType="Integer" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		where roleId=#{roleId}
	</select>
	
	
	
</mapper>
