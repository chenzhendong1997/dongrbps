<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dingzhen.dao.LeaveDao">
	
	<select id="findLeave" parameterType="leave" resultType="leave">
		SELECT 
    l.*, u.userName, d.statusname
FROM
    rbps.leave l
        LEFT JOIN
    rbps.user u ON l.studentId = u.userId
        LEFT JOIN
    rbps.dict d ON l.status = d.status
WHERE
    1 = 1
		<if test="userName != null and '' != userName">  
            <![CDATA[  
              AND userName like '%' #{userName} '%'  
            ]]>  
        </if>
        <if test="studentId!=null and studentId!=''">
            <![CDATA[  
              AND studentId = #{studentId}
            ]]>  
        </if>
		<if test="page != null and rows != null" >           
              limit #{page}, #{rows} 
        </if>
	</select>

	<select id="countLeave" parameterType="leave" resultType="int">
		select count(*) from rbps.leave where 1 = 1
		<if test="userName != null and '' != userName">  
            <![CDATA[  
              AND userName like '%' #{userName} '%'  
            ]]>  
        </if>
	</select>
	
	<select id="findOneUser" parameterType="Integer" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		<where>userId=#{userId}</where>
	</select>
	
	<insert id="addLeave" parameterType="leave" >
		insert rbps.leave(studentId,why,begintime,endtime,status) 
		values (#{studentId},#{why},#{begintime},#{endtime},'1')
	</insert>
	
	<update id="updateLeave" parameterType="leave">
    	update rbps.leave set
    	<trim suffixOverrides=",">
			<if test="why!=null">why=#{why},</if>
			<if test="begintime!=null">begintime=#{begintime},</if>
			<if test="endtime!=null">endtime=#{endtime},</if>
			<if test="status!=null">status=#{status},</if>
		</trim>
		<where>id=#{id}</where>
    </update>
	
	
	<delete id="deleteUser" parameterType="Integer">
		delete from user 
		<where>userId=#{userId}</where>
	</delete>
	
	<select id="loginUser" parameterType="Map" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		where userName=#{userName} and password=#{password}
	</select>
	
	
	<select id="existUserWithUserName" parameterType="String" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		where userName=#{userName}
	</select>
	
	
	<select id="existUserWithRoleId" parameterType="Integer" resultType="user">
		select userId,userName,password,classid,roleId,userDescription from user
		where roleId=#{roleId}
	</select>
	
	
	
</mapper>
